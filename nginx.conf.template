server {
  listen 80;
  server_name ${NGINX_SERVER_NAME};

  # Перенаправление HTTP на HTTPS
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name ${NGINX_SERVER_NAME};

  ssl_certificate ${NGINX_SSL_CERT};
  ssl_certificate_key ${NGINX_SSL_CERT_KEY};

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  # Защита скрытых файлов
  location ~ /\. {
    deny all;
  }

  # Прокси для UI
  location / {
    proxy_pass http://ui:80;  # ui — имя сервиса в docker-compose
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Прокси для API
  location /api/ {
    proxy_pass http://api:4000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    add_header 'Access-Control-Allow-Origin' "$http_origin" always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;

    if ($request_method = OPTIONS ) {
      add_header 'Content-Length' 0;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      return 204;
    }
  }
}
